apiVersion: batch/v1
kind: CronJob
metadata:
  name: kiem-job
  namespace: {{ .Release.Namespace }}
spec:
  schedule: "{{ .Values.cronTab }}"  
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  jobTemplate:
    metadata:
      labels:
        app: kiem-job
    spec:
      template:
        spec:
        {{- if .Values.registry.secretName }}
          imagePullSecrets:
          - name: {{ .Values.registry.secretName }}
        {{- end }}         
          initContainers:
            - name: kiem-init
              image: "{{ include "kiem.image" . }}"
              args: ["./kiem", "run", "--mode", "k8s", "--output", "/data/report.json"]
              env:
                - name: CLUSTER_NAME
                  value: {{ .Values.clusterName }}
              volumeMounts:
                - name: datapath
                  mountPath: /data
          containers:
            - image: "{{ include "cluster_job.image" . }}"
              command: ['sh', '-c', 'curl --location --request POST "https://${URL}/api/v1/artifact/?tenant_id=${TENANT_ID}&data_type=KIEM&save_to_s3=true&label_id=${LABEL_NAME}" --header "Tenant-Id: ${TENANT_ID}" --header "Authorization: Bearer ${AUTH_TOKEN}" --form "file=@\"/data/report.json\""']
              name: accuknox-kiem-cronjob
              resources: {}
              env:
                - name: AUTH_TOKEN
                  valueFrom:
                    secretKeyRef:
                      key: AUTH_TOKEN
                      {{- if (.Values.secretName | empty) }}
                      name: kiem-job-auth-token
                      {{- else }}
                      name: {{ .Values.secretName }}
                      {{- end }}
                - name: URL
                  value: {{ .Values.URL }}
                - name: TENANT_ID
                  value: {{ .Values.tenantID | quote }}
                - name: CLUSTER_NAME
                  value: {{ .Values.clusterName }}
                - name: LABEL_NAME
                  value: {{ .Values.label | quote}}
              volumeMounts:
                - mountPath: /data
                  name: datapath      
          volumes:
            - name: datapath
              emptyDir: {}
          restartPolicy: OnFailure
          serviceAccount: kiem-service-account


