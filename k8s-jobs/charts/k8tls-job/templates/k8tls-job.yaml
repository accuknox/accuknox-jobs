{{- if .Values.accuknox.k8tls.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: k8tls-job
  namespace: {{ .Release.Namespace }}
spec:
  template:
    metadata:
      name: k8tls-job
    spec:
      serviceAccountName: k8tls-serviceact
      containers:
      - image: accuknox/accuknox-job:latest
        command: ["/bin/sh", "-c"]
        args: ['curl --location --request POST "https://${URL}/api/v1/artifact/?tenant_id=${TENANT_ID}&data_type=K8TLS&save_to_s3=false" --header "Tenant-Id: ${TENANT_ID}" --header "Authorization: Bearer ${AUTH_TOKEN}" --form "file=@\"/data/report.json\"" && cat /data/report.json']
        name: k8tls-job
        resources: {}
        env:
          - name: URL
            value: {{ .Values.global.url }}
          - name: TENANT_ID
            value: {{ .Values.global.tenantId | quote }}
          - name: AUTH_TOKEN
            value: {{ .Values.global.authToken }}
          - name: CLUSTER_NAME
            value: {{ if ne .Values.global.clusterName "" }}{{ .Values.global.clusterName }}{{ else }}{{ "default" }}{{ end }}
          - name: LABEL_NAME
            value: {{ if ne .Values.global.label "" }}{{ .Values.global.label }}{{ else }}{{ "default" }}{{ end }}
        volumeMounts:
          - mountPath: /data
            name: datapath
      initContainers:
      - command: ["/bin/sh", "-c"]
        args: ["./k8s_tlsscan"]
        image: kubearmor/k8tls:latest
        name: k8tls
        env:
          - name: JSON
            value: "/data/report.json"
        volumeMounts:
        - mountPath: /data
          name: datapath
      restartPolicy: Never
      volumes:
        - name: datapath
          emptyDir: {}

{{- end }}  