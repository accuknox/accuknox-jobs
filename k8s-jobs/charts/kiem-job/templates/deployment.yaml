{{- if .Values.accuknox.kiem.enabled }}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: kiem-job
  namespace: {{ .Release.Namespace }}
spec:
  schedule: "{{ .Values.global.cronTab }}"  
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  jobTemplate:
    metadata:
      labels:
        app: kiem-job
    spec:
      template:
        spec:
          initContainers:
            - name: kiem-init
              image: accuknox/kiem:latest
              args: ["./kiem", "run", "--mode", "k8s", "--output", "/data/report.json"]
              env:
                - name: CLUSTER_NAME
                  value: {{ .Values.global.clusterName }}
              volumeMounts:
                - name: datapath
                  mountPath: /data
          containers:
            - image: accuknox/accuknox-job:latest
              command: ['sh', '-c', 'curl --location --request POST "https://${URL}/api/v1/artifact/?tenant_id=${TENANT_ID}&data_type=KIEM&save_to_s3=false&label_id=${LABEL_NAME}" --header "Tenant-Id: ${TENANT_ID}" --header "Authorization: Bearer ${AUTH_TOKEN}" --form "file=@\"/data/report.json\""']
              name: accuknox-kiem-cronjob
              resources: {}
              env:
                - name: URL
                  value: {{ .Values.global.url }}
                - name: TENANT_ID
                  value: {{ .Values.global.tenantId | quote }}
                - name: AUTH_TOKEN
                  value: {{ .Values.global.authToken }}
                - name: CLUSTER_NAME
                  value: {{ .Values.global.clusterName }}
                - name: LABEL_NAME
                  value: {{ .Values.global.label | quote}}
              volumeMounts:
                - mountPath: /data
                  name: datapath      
          volumes:
            - name: datapath
              emptyDir: {}
          restartPolicy: OnFailure
          serviceAccount: kiem-service-account
{{- end }}  