apiVersion: batch/v1
kind: Job
metadata:
  name: cis-k8s-job-{{ now | unixEpoch }}
  namespace: {{ .Release.Namespace }}
spec:
  # keep the job for 2 hours after successful completion
  ttlSecondsAfterFinished: 7200
  template:
    metadata:
      name: cis-k8s-job-{{ now | unixEpoch }}
      labels:
        app: cis-k8s-job-{{ now | unixEpoch }}
    spec:
    {{- if or (or (contains "master" .Values.global.cis.toolConfig.nodeType) (contains "controlplane" .Values.global.cis.toolConfig.nodeType)) (or (contains "master" .Values.global.cis.toolConfig.targets) (contains "controlplane" .Values.global.cis.toolConfig.targets)) }}
      {{- include "masterConfig" .Values.global.cis.toolConfig | trim | nindent 6 }}
    {{- end }}
      {{- if .Values.global.registry.secretName }}
      imagePullSecrets:
      - name: {{ .Values.global.registry.secretName | quote }}
      {{- end }}
      serviceAccount: cis-service-account
      containers:
      - image: "{{ include "cluster_job.image" . }}"
        command: ["/bin/sh", "-c"]
        args: ['/bin/sh ./entrypoint.sh && ./curl_command.sh -config /jobs/conf/app.yaml']
        name: cis-k8s-cronjob
        env:
          - name: JOB_TYPE
            value: "cis-k8s"
          - name: AUTH_TOKEN
            value: {{ .Values.global.authToken | quote }}
          - name: CLUSTER_NAME
            value: {{ .Values.global.clusterName }}
          - name: URL     
            value: "{{ include "global.jobURL" . }}"
          - name: TENANT_ID
            value: {{ .Values.global.tenantId | quote }}
          - name: LABEL_NAME
            value: {{ .Values.global.label | quote }}
          - name: CERT_BUNDLE_PATH
            value: {{ .Values.global.certBundlePath | quote }}
          - name: CERT_BUNDLE_URL
            value: {{ .Values.global.certBundleURL | quote }}
          - name: USE_INSECURE_CONNECTION
            value: {{ .Values.global.useInsecureConnection | quote }}
          - name: DATA_TYPE
            value: "KB"
        volumeMounts:
        - mountPath: /data
          name: datapath
        - name: secret-volume
          mountPath: /secrets/tokens
          readOnly: true
        - name: config
          mountPath: /jobs/conf/app.yaml
          subPath: app.yaml
        {{- if .Values.global.agents.joinToken }}    
        - name: config
          mountPath: /jobs/spire/agent.conf
          subPath: agent.conf 
        - name: spirepath
          mountPath: /run/spire/agent
        {{- end }}
      initContainers:
      - image: "{{ include "kubeBench.image" . }}"
        command:
        {{- include "cmd" .Values.global.cis.toolConfig | trim | nindent 9 }}
        name: kube-bench
        volumeMounts:
        {{- include "volumeMounts" .Values.global.cis.toolConfig | trim | nindent 9 }}
      hostPID: true
      restartPolicy: Never
      volumes:
       - name: secret-volume
         secret:
           secretName: {{ .Values.global.secretName | default "jobs-token" }}
       - name: config
         configMap:
          name: cis-config-{{ .Release.Name }}
       {{- if .Values.global.agents.joinToken }} 
       - name: spirepath
         emptyDir: {}
       {{- end }}
      {{- include "volumes" .Values.global.cis.toolConfig | trim | nindent 7 }}