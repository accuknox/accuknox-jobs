agents:
  enableSpire: true
  enablePps: true
  enableKnoxGateway: true
  url: ""

  joinToken: ""

  accessKey: ""

  clusterName: ""

  tokenURL: ""

  cspmHost: ""

registry: 
  url: ""
  secretName: ""
  preserveUpstream: true
  
agentsOperator:

  replicaCount: 1

  repository: "agents-operator"
  owner: "public.ecr.aws/k9v9d5v2"
  tag: "v0.4.2"
  image: ""
  ports:
    health: 9090
    spire: 8081
  spireVars:
    SPIRE_ENABLED: true

  resources: {}

  volumeMounts: []

  volumes: []

  strategy:
    type: "Recreate"


sharedInformerAgent:

  replicaCount: 1

  owner: "public.ecr.aws/k9v9d5v2"
  repository: "shared-informer-agent"
  tag: "v0.8.2"
  image: ""

  auditWebhook:
    enabled: false
    port: 8080

  liveness: true

  resources: {}

  volumeMounts: []

  volumes: []


policyEnforcementAgent:

  replicaCount: 1

  owner: "public.ecr.aws/k9v9d5v2"
  repository: "policy-enforcement-agent"
  tag: "v0.7.2"
  image: ""

  liveness: true

  resources: {}

  volumeMounts: []

  volumes: []


feederService:

  replicaCount: 1

  owner: "public.ecr.aws/k9v9d5v2"
  repository: "feeder-service"
  tag: "v0.10.0"
  image: ""

  liveness: true

  resources: {}

  volumeMounts: []

  volumes: []

  discoveryEngineVars:
    DISCOVERYENGINE_VERSION: "2"
    DISCOVERYENGINE_ENABLED: "true"
    DISCOVERYENGINE_PORT: "9089"

  kubearmorVars:
    KUBEARMOR_URL: "kubearmor.kube-system.svc.cluster.local"
    KUBEARMOR_PORT: 32767
    KUBEARMOR_ALERTS: false
    KUBEARMOR_ENABLED: true
    KUBEARMOR_LOGS: "sdf"

  splunkVars:
    SPLUNK_FEEDER_ENABLED: "false"
    SPLUNK_FEEDER_URL: ""
    SPLUNK_FEEDER_TOKEN: ""
    SPLUNK_FEEDER_INDEX: ""
    SPLUNK_FEEDER_SOURCE: ""
    SPLUNK_FEEDER_SOURCE_TYPE: ""
    SPLUNK_ALERTS_ENABLED: "false"
    SPLUNK_LOGS_ENABLED: "false"

  azureSentinelVars:
    AZURE_SENTINEL_ENABLED: "false"
    AZURE_SENTINEL_LOGS_ENABLED: "false"
    AZURE_SENTINEL_ALERTS_ENABLED: "false"
    AZURE_SENTINEL_URL: ""
    AZURE_SENTINEL_GROUP_NAME: ""
    AZURE_SENTINEL_GROUP_VALUE: ""

  ciliumVars:
    HUBBLE_ENABLED: "false"
    HUBBLE_URL: "hubble-relay.kube-system.svc.cluster.local"
    HUBBLE_PORT: 80

  # enable prometheus metrics endpoint
  metrics:
    enabled: false
    serviceMonitor:
      enabled: false
      additionalLabels: {}


discoveryEngine:

  replicaCount: 1

  tag: "v0.3.6"
  owner: "public.ecr.aws/k9v9d5v2"
  repository: "discovery-engine"
  imagebase: "public.ecr.aws/k9v9d5v2/discovery-engine"

  rabbitmq:
    name: "rabbitmq"
    enabled: true
    image:
      repository: "rabbitmq"
      tag: "3.12.2-management"
    resources:
      requests:
        cpu: 100m
        memory: 100Mi
      limits:
        cpu: 200m
        memory: 200Mi

  summaryEngine:
    image: ""
    enabled: true
    resources:
      requests:
        cpu: 50m
        memory: 50Mi
      limits:
        cpu: 100m
        memory: 200Mi

    appConfig:
      watcher:
        kubearmor:
          enabled: true
          event-type:
            logs: true
            alerts: true
          relay:
            name: relay-1
            enabled: false
            url: ""
            port: ""
          allowList:
            enabled: true
            protocolFamily:
            - TCP
            - AF_INET
            - AF_INET6
            operations:
            - CONNECT
            - ACCEPT
            - BIND
            - CREATE
          denyList:
            enabled: true
            urls:
            - "localhost"
            - "127.0.0.1"
            - "::1"
            ports:
            - 53
        sentryflow:
          enabled: false # Enable this to enable summarization for SentryFlow
          event-type:
            access-log: true
            metric: false # Currently metrics are not supported
          service:
            enabled: false # Enable this to enable summarization for SentryFlow
            name: sentryflow
            url: ""
            port: ""
      summary-engine:
        splunk:
          enabled: false
          url: ""
          token: ""
          source: ""
          sourcetype: ""
          index: ""
          certificate: ""
          skipTls: false
          maxRetries: 3
        kubearmor:
          enabled: true
          cron-interval: "0h05m0s"
          threshold: 10000
          file-aggregation: true
          exclude-namespaces:
            kubearmor: true
          exclude-events:
            operation:
              process: false
              file: false
              network: false
        topic:
            summary-event: "summary-v2"
        sentryflow:
          enabled: false
          redact-sensitive-data: true
          sensitive-rules-files-path:
            - /var/lib/sumengine/sensitive-data-rules.yaml
          include-bodies: false # Set it to `true` to include request and response bodies in summarized events.
          decode-jwt: false # Set it to `true` to decode User associated with the call of the request JWT, if available.
          threshold: 10000
          cron-interval: "0h0m30s"         # format: XhYmZs
          #static-asset-paths: # Custom static assets paths to skip from summarization, regex are not supported.
          #  - some path
          #  - some path 2
        k8s:
          enable: true

    kmuxConfig:
      kmux:
        sink:
          stream: rabbitmq
      rabbitmq:
        server: "localhost:5672"
        exchange:
          name: "dev2"
          type: "direct"
          durable: true
          auto-delete: true

  offloader:
    image: ""
    enabled: false
    resources:
      requests:
        cpu: 50m
        memory: 50Mi
      limits:
        cpu: 100m
        memory: 100Mi

    appConfig:
      offloader:
        summary:
          enabled: true
          topic: "summary-v2"
          retention:
            enabled: true
            interval: 1 # Interval in days
        policy:
          enabled: true
          topic: "policy-v1"
          merge_policy: false
          retention:
            enabled: true
            interval: 7 # Interval in days
        server:
          enabled: true
          host: 0.0.0.0
          port: 8090
      database:
        driver: sqlite
        name:
          policy-db: /Offloader/policy.db
          summary-db: /Offloader/summary.db
        credentials: local

    kmuxConfig:
      kmux:
        source:
          stream: rabbitmq
      rabbitmq:
        server: "localhost:5672"
        exchange:
          name: "dev2"
          type: "direct"
          durable: true
          auto-delete: true
        queue:
          name: ""
          durable: true
          auto-delete: true
        consumer-tag: "offloader"

  hardening:
    image: ""
    enabled: false
    resources:
      requests:
        cpu: 50m
        memory: 50Mi
      limits:
        cpu: 100m
        memory: 100Mi

    appConfig:
      hardening:
        enabled: true
        cron-job-time-interval: "1h00m00s"
        recommend-host-policy: true
        template-version: "0.2.6"
        topic: "policy-v1"
        download-templates: false
        delay-cron-job: "0h05m00s"
        filter-enabled: true
        exclude-namespaces:
          kubearmor: true
          kube-system: true
        k8s:
          enable: true
        state-agent:
          port: "32771"

    kmuxConfig:
      kmux:
        sink:
          stream: rabbitmq
      rabbitmq:
        server: "localhost:5672"
        exchange:
          name: "dev2"
          type: "direct"
          durable: true
          auto-delete: true
        queue:
          name: ""
          durable: true
          auto-delete: true
        consumer-tag: "hardening"

  discover:
    image: ""
    enabled: true
    resources:
      requests:
        cpu: 50m
        memory: 50Mi
      limits:
        cpu: 100m
        memory: 100Mi

    appConfig:
      discover:
        consumer:
          buffer-limit:
            system: 10000
            network: 10000
          time-limit: 10
          topic: "summary-v2"
        processor:
          spu: 1
          npu: 1
          cores: 50
          delay-cron-job: "0h03m00s"
          cron-job-interval: "0h10m00s"
        sink:
          channel-size: 1000
          topic: "policy-v1"
        policy-client:
          server: 127.0.0.1:8090
        ruleConfig:
          rules: "process,network"
        k8s:
          enable: true
        tls:
          enabled: false
        policy: 
          host: false
          workload: true
        aggregation:
          enabled: true
          threshold: 10
      logging:
        level: info

    kmuxConfig:
      kmux:
        source:
          stream: rabbitmq
        sink:
          stream: rabbitmq
      rabbitmq:
        server: "127.0.0.1:5672"
        exchange:
          name: "dev2"
          type: "direct"
          durable: true
          auto-delete: true
        queue:
          name: ""
          durable: true
          auto-delete: true
        consumer-tag: "discover"



localRegistryAgent:

  replicaCount: 1
  name: "local-registry-agent"
  dockerSockPath: ""
  configmaps:
    local-registry-agent:
      name:  local-registry-agent
      enabled: true
      file: localagent-configs/config.yaml
    kmux-local-registry-agent-spire-cfg:
      name: kmux-local-registry-agent
      enabled: true
      file: localagent-configs/kmux-spire.yaml
    registry-operator:
      name: registry-operator-configmap
      enabled: true
      file: localagent-configs/registry-scanning.yaml


  tag: "v0.3.0"
  owner: "public.ecr.aws/k9v9d5v2"
  repository: "registry-local-agent"
  image: ""
  args: "/var/lib/local-agent/config.yaml"

  resources: {}

  volumeMounts:
    - name: local-registry-agent
      mountPath: /var/lib/local-agent/config.yaml
      subPath: config.yaml
      readOnly: true
    - name: kmux-local-registry-agent-spire
      mountPath: /var/lib/local-agent/kmux/spire/config.yaml
      subPath: config.yaml
      readOnly: true
    - name: registry-operator-config
      mountPath: /var/lib/registry-operator/config.yaml
      subPath: config.yaml
      readOnly: true

  volumes:
    - name: local-registry-agent
      configMap:
        name: local-registry-agent
    - name:  kmux-local-registry-agent-spire  
      configMap:
        name:  kmux-local-registry-agent  
    - name: registry-operator-config
      configMap:
        name: registry-operator-configmap

#OnlyChartsNeedsToBeInstall
install:
  Feeder: false
  localRegistryAgent: false

rabbitmq:
  enabled: true
  image:
    repository: "rabbitmq"
    tag: "3.12.2-management"
  username: "rabbitmq-user"
  password: "1E758F90-0092-4400-8713-EAD9FF591F75"
  replicaCount: 1
  service:
    type: ClusterIP
    port: 5672

# Values specific to knoxguard and kyverno sub-charts
admissionController:
  enabled: false

kyverno:
  enabled: false
