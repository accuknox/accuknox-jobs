# SPDX-License-Identifier: Apache-2.0
# Copyright 2024

name: Push image to ECR

on:
  workflow_call:
    inputs:
      DOCKER_CONTEXT:
        description: 'Docker build context'
        required: true
        type: string
      DOCKERFILE:
        description: 'Path to Dockerfile'
        required: true
        type: string
      IMAGE_NAME:
        description: 'Image name (without registry)'
        required: true
        type: string
      REGISTRY:
        description: 'Registry URL'
        required: false
        type: string
        default: public.ecr.aws/k9v9d5v2
      AWS_REGION:
        description: 'AWS region'
        required: false
        type: string
        default: us-east-1
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      GIT_KEY:
        required: true

jobs:
  push_to_registry:
    name: Build and Push Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Set up AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ inputs.AWS_REGION }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to AWS ECR
        run: |
          aws ecr-public get-login-password --region ${{ inputs.AWS_REGION }} \
            | docker login --username AWS --password-stdin ${{ inputs.REGISTRY }}

      - name: Determine version
        id: vars
        run: |
          if [ "${GITHUB_REF}" == "refs/heads/main" ]; then
            echo "tag=latest" >> $GITHUB_OUTPUT
          else
            echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT
          fi

      - name: Set git ssh private key
        run: echo "${{ secrets.GIT_KEY }}" > GIT-KEY

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: ${{ inputs.DOCKER_CONTEXT }}
          file: ${{ inputs.DOCKERFILE }}
          push: true
          tags: ${{ inputs.REGISTRY }}/${{ inputs.IMAGE_NAME }}:${{ steps.vars.outputs.tag }}
