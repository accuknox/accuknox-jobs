apiVersion: batch/v1
kind: CronJob
metadata:
  name: cis-k8s-cronjob
  namespace: {{ .Release.Namespace }}
spec:
  jobTemplate:
    metadata:
      name: cis-k8s-cronjob
    spec:
      template:
        spec:
        {{- if or (or (contains "master" .Values.toolConfig.nodeType) (contains "controlplane" .Values.toolConfig.nodeType)) (or (contains "master" .Values.toolConfig.targets) (contains "controlplane" .Values.toolConfig.targets)) }}
          {{- include "masterConfig" .Values.toolConfig | trim | nindent 10 }}
        {{- end }}
        {{- if .Values.imagePullSecrets.name }}
          imagePullSecrets:
          - name: {{ .Values.imagePullSecrets.name }}
        {{- end }}
          containers:
          - image: "{{ .Values.accuknoxJob.image.repository }}:{{ .Values.accuknoxJob.image.tag }}" 
            name: cis-k8s-cronjob
            resources: {}
            env:
              - name: AUTH_TOKEN
                valueFrom:
                  secretKeyRef:
                    key: AUTH_TOKEN
                    {{- if (.Values.accuknox.secretName | empty) }}
                    name: cis-k8s-job-auth-token
                    {{- else }}
                    name: {{ .Values.accuknox.secretName }}
                    {{- end }}
              - name: CLUSTER_NAME
                value: {{ .Values.accuknox.clusterName }}
              - name: LABEL_NAME
                value: {{ .Values.accuknox.label }}
              - name: CLUSTER_ID
                value: {{ .Values.accuknox.clusterId }}
              - name: TENANT_ID
                value: {{ .Values.accuknox.tenantId | quote}}
              - name: URL
                value: {{ .Values.accuknox.url }}
              - name: DATA_TYPE
                value: {{ .Values.accuknox.dataType | default "KB" }}
              - name:  "SAVE_TO_S3"
                value: {{ .Values.accuknox.saveToS3 | default "true" }}
              - name:  "REPORT_FILE"
                value: {{ .Values.accuknox.reportFile | default "/data/report.json" }}
              - name:  "SPIRE_SERVER"
                value: {{ .Values.spire.server }}
              - name:  "SPIRE_PORT"
                value: {{ .Values.spire.port | default "8081" | quote }}
              - name:  "SPIRE_SECRET_NAME"
                value: {{ .Values.spire.secretName | default (printf "spire-agent-secret-%s" .Release.Name) }}
              - name:  "SPIRE_JOIN_TOKEN"
                value: {{ .Values.spire.joinToken }}
              - name:  "SPIRE_NAMESPACE"
                value: {{ .Release.Namespace }}
              - name:  "SPIRE_CONFIG_PATH"
                value: {{ .Values.spire.configPath | default "/spire/agent.conf" | quote }}
              - name:  "KNOX_GATEWAY"
                value: {{ .Values.accuknox.gateway }}
              - name: "PRINT_DATA"
                value: true
            volumeMounts:
            - mountPath: /data
              name: datapath
            {{- if .Values.spire.joinToken }}    
            - name: spire-agent
              mountPath: /spire/ 
            - name: spirepath
              mountPath: /run/spire/agent
            {{- end }}
          initContainers:
          - image: "{{ .Values.kubeBench.image.repository }}:{{ .Values.kubeBench.image.tag }}" 
            command:
            {{- include "cmd" .Values.toolConfig | trim | nindent 13 }}
            name: kube-bench
            volumeMounts:
            {{- include "volumeMounts" .Values.toolConfig | trim | nindent 13 }}
          hostPID: true
          restartPolicy: Never
          volumes:
            {{- if .Values.spire.joinToken }} 
            - name: spirepath
              emptyDir: {}
            - name: spire-agent
              configMap:
                name: {{ printf "spire-agent-config-%s" .Release.Name }} 
            {{- end }}
          {{- include "volumes" .Values.toolConfig | trim | nindent 12 }}
          serviceAccount: cis-service-account
  schedule: "{{ .Values.accuknox.cronTab }}"
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1

status: {}
